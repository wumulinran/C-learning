表单:
	作用:用来收集用户的信息，并且提交给服务器。

	表单form:
		属性:
			action    提交的服务器地址
			method	  提交表单的方式get和post

	get:
		1)提交数据的地方是在地址栏后面    地址?键=值&键=值
		2)不安全
		3)传输参数长度是有限制的


	post:
		1)提交数据的地方是在协议的请求的请求实体中	
		2)相对安全
		3)传输参数长度是理论上无限制的



	表单域元素:
		普通文本框  text
		密码框      password
		单选按钮    radio
		复选框      checkbox
		下拉列表    select->option
		文件域      file
		文本域      textarea
		提交按钮    submit
		重置按钮    reset
		普通按钮    button
		隐藏域	    hidden



	注意:
		1)如果该表单域元素需要提交则必须具备name属性。
		2)要成为一组单选按钮或者复选框，应该具备相同的name。
		3)单选按钮和复选框在没有写value的情况默认的值是on。
		4)下拉列表的option不写value默认的值是option中间的值。
		5)文本域控制高度和宽度的不是height和width，应该用rows和cols。
		6)重置按钮不是将表单清空而是将表单回到最初始的状态。



	默认值:
		普通文本框、密码框:
			在标签中写上  value="默认值"

		文本域:
			写在textarea的中间

	默认选中:
		单选按钮、复选框:
			在标签中添加 checked 或者checked="checked"。

		下拉列表:
			在option中添加selected 或者selected="selected"。


	
css层叠样式表:
	选择器:
		元素选择器:
			标签名{属性名:值;属性名:值....}
				作用:该页面的所有该标签名的标记享有该属性



		id选择器:
			任何标签都可以写id属性，并且id应该具备唯一性。
			#id值{属性名:值;属性名:值....}
				作用:该页面的该id所对应的的标记享有该属性


		类选择器:
			任何标签都可以写class属性，并且class是可以相同的
			.class值{属性名:值;属性名:值....}
				作用:该页面的所有该class所对应的标记享有该属性	

		包含选择器:
			祖先选择器 后代选择器{属性名:值;属性名:值....}
				作用:该祖先选择器下的所有后代选择器对应的标签享有该属性

		补充语法:
			如果多个选择器用的属性是相同的时候，可以简单的写成   选择器1,选择器2...{属性名:值;属性名:值....}


	
	使用css的三种方式:
		1)直接在页面的head中添加<style>,在<style>写选择器。
		2)直接在标签中添加style="属性名:值;属性名:值...."
		3)引入外部的css文件资源，<link rel="stylesheet" href="css文件的地址" />。



	css作用的优先级:
		1)同种选择器的话，严格按照就近原则。
		2)不同选择器的话，越精准越有效。














	



	


